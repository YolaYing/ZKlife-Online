declare function run(): Promise<void>;

type LogType = 'error' | 'warn' | 'info';
type LogLevel = LogType | 'silent';

interface UserConfig {
    /**
     * Update your Etherum JSON RPC provider URL here.
     * Recommend using Erigon node RPC.
     */
    JsonRpcProviderUrl?: {
        mainnet?: string;
        sepolia?: string;
        goerli?: string;
    };
    /**
     * Update your private key here to sign zkwasm messages.
     * Please note that (during testnet phrase) your address balance (in zkwasm server) should > 0;
     */
    UserPrivateKey?: string;
    /**
     * @default "https://rpc.zkwasmhub.com:8090"
     */
    ZkwasmProviderUrl?: string;
    /**
     * @default "http://compiler.dev.hyperoracle.io/compile"
     */
    CompilerServerEndpoint?: string;
    /**
     * @default "https://api.pinata.cloud/pinning/pinFileToIPFS"
     */
    PinataEndpoint?: string;
    PinataJWT?: string;
    /**
     * @default "[root]/build/zkgraph.wasm"
     */
    WasmBinPath?: string;
    /**
     * @default "[root]/build/zkgraph_local.wasm"
     */
    LocalWasmBinPath?: string;
    /**
     * @default "[root]/src/zkgraph.yaml"
     */
    YamlPath?: string;
    /**
     * @default "[root]/src/mapping.ts"
     */
    MappingPath?: string;
    /**
     * @default "[root]/build/proof_[taskId].txt"
     */
    OutputProofFilePath?: string;
    logger?: {
        /**
         * logger level
         * @default "info"
         */
        level?: LogLevel;
    };
}
type UserConfigFnObject = (...args: any[]) => UserConfig;
type UserConfigFn = (...args: any[]) => UserConfig | Promise<UserConfig>;
declare function defineConfig(config: UserConfig): UserConfig;
declare function defineConfig(config: Promise<UserConfig>): Promise<UserConfig>;
declare function defineConfig(config: UserConfigFnObject): UserConfigFnObject;
declare function defineConfig(config: UserConfigFn): UserConfigFn;

export { type UserConfig, defineConfig, run };
